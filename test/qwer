#!/usr/bin/env python

from qwer import *
from testify import *

a = qwer('...')
b = qwer('(?:a', rule('a'), ')?b', rule('a'))

# Unbound

equal(('(?:a(...))?b(...)', [a, a]), b.a)
equal(('(?:a(...))?b(...)', [a, a]), b['a'])
equal(('(?:a...)?b...', []), b.bogus)

equal('(?:a...)?b...', str(b))

# Bound

# int()

equal(123, int(b('b123xyz').a))
equal(123, int(b('b123xyz')['a']))
equal(123, int(b('a123b456xyz').a))

try:
  ok(False, int(b('b123xyz').bogus))

except AttributeError:
  ok(True)

try:
  ok(False, int(b('xyz').a))

except ValueError:
  ok(True)

# iter()

equal(['abc'], map(str, b('babcxyz').a))
equal(['abc'], map(str, b('babcxyz')['a']))
equal(['abc', 'def'], map(str, b('aabcbdefxyz').a))

try:
  ok(False, iter(b('babcxyz').bogus))

except AttributeError:
  ok(True)

try:
  ok(False, iter(b('xyz').a))

except ValueError:
  ok(True)

# str()

equal('abc', str(b('babcxyz').a))
equal('abc', str(b('babcxyz')['a']))
equal('abcdef', str(b('aabcbdefxyz').a))

try:
  ok(False, str(b('babcxyz').bogus))

except AttributeError:
  ok(True)

try:
  ok(False, str(b('xyz').a))

except ValueError:
  ok(True)

# int()

equal(123, int(a('123')))
equal(123, int(b('123')))

# len()

equal(4, len(b('babcxyz')))

try:
  ok(False, len(b('xyz')))

except ValueError:
  ok(True)

# str()

equal('abc', str(a('abc')))
equal('abc', str(b('abc')))
