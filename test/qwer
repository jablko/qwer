#!/usr/bin/env python

from qwer import *
from testify import *

a = qwer('\d\d\d')
b = qwer('a', rule('a'))
c = qwer('a', rule('a'), rule('b'))
d = qwer('(?:', rule('b'), ')?', rule('c'))

equal((0,
  '(?:a\d\d\d)?a\d\d\da\d\d\d',
  [],
  []), d.compile(0))

equal(123, int(a.match('123xyz')))
equal(3, len(a.match('123xyz')))
equal('123', str(a.match('123xyz')))

try:
  ok(False, a.match('xyz123xyz'))

except ValueError:
  ok(True)

equal(123, int(a.search('xyz123xyz')))
equal(3, len(a.search('xyz123xyz')))
equal('123', str(a.search('xyz123xyz')))

try:
  ok(False, a.search('xyz'))

except ValueError:
  ok(True)

equal((3,
  '(?:a(\d\d\d))?a(\d\d\d)a(\d\d\d)',
  [('a', [1, []]), ('a', [2, []]), ('a', [3, []])],
  [[1, []], [2, []], [3, []]]), d.compile(0, ('a', ())))

equal((2,
  '(?:a\d\d\d)?a(\d\d\d)a(\d\d\d)',
  [('a', [1, []]), ('a', [2, []])],
  [[1, []], [2, []]]), d.compile(0, ('c', 'a', ())))

equal((1,
  '(?:a\d\d\d)?a\d\d\da(\d\d\d)',
  [('a', [1, []])],
  [[1, []]]), d.compile(0, ('c', 'b', 'a', ())))

equal((0,
  '(?:a\d\d\d)?a\d\d\da\d\d\d',
  [],
  []), d.compile(0, ('bogus', ())))

# int()

equal(123, int(d.match('a123a456xyz', 'a')))
equal(123, int(d.match('a123a456a789xyz', 'a')))
equal(456, int(d.match('a123a456a789xyz', 'c a')))
equal(789, int(d.match('a123a456a789xyz', 'c b a')))

try:
  ok(False, int(d.match('a123a456xyz', 'bogus')))

except IndexError:
  ok(True)

# str()

equal('123', str(d.match('a123a456xyz', 'a')))
equal('123', str(d.match('a123a456a789xyz', 'a')))
equal('456', str(d.match('a123a456a789xyz', 'c a')))
equal('789', str(d.match('a123a456a789xyz', 'c b a')))

try:
  ok(False, str(d.match('a123a456xyz', 'bogus')))

except IndexError:
  ok(True)

equal('456', str(d.match('a123a456xyz', 'a')[1]))

try:
  ok(False, d.match('a123a456xyz', 'a')[2])

except IndexError:
  ok(True)

try:
  ok(False, d.match('a123a456xyz', 'bogus')[0])

except IndexError:
  ok(True)

# iter()

equal(['123', '456'], map(str, d.match('a123a456xyz', 'a')))
equal(['123', '456', '789'], map(str, d.match('a123a456a789xyz', 'a')))
equal(['456', '789'], map(str, d.match('a123a456a789xyz', 'c a')))
equal(['789'], map(str, d.match('a123a456a789xyz', 'c b a')))

equal([], map(str, d.match('a123a456xyz', 'bogus')))

e = ('b', [5, [('a', [6, []])]])

equal((6,
  '(?:(a(\d\d\d)))?(a(\d\d\d)(a(\d\d\d)))',
  [('b', [1, [('a', [2, []])]]), ('c', [3, [('a', [4, [], e]), e]])],
  []), d.compile(0, ('a',), ('b',), ('c',)))

# int()

equal(123, int(d.match('a123a456xyz', '( a, b, c )').a))
equal(123, int(d.match('a123a456xyz', '( a, b, c )')['a']))
equal(123, int(d.match('a123a456a789xyz', '( a, b, c )').a))
equal(456, int(d.match('a123a456a789xyz', '( a, b, c )')['c a']))
equal(456, int(d.match('a123a456a789xyz', '( a, b, c )').c.a))
equal(789, int(d.match('a123a456a789xyz', '( a, b, c )').c['b a']))

# str()

equal('123', str(d.match('a123a456xyz', '( a, b, c )').a))
equal('123', str(d.match('a123a456xyz', '( a, b, c )')['a']))
equal('123', str(d.match('a123a456a789xyz', '( a, b, c )').a))
equal('456', str(d.match('a123a456a789xyz', '( a, b, c )')['c a']))
equal('456', str(d.match('a123a456a789xyz', '( a, b, c )').c.a))
equal('789', str(d.match('a123a456a789xyz', '( a, b, c )').c['b a']))

equal('456', str(d.match('a123a456xyz', '( a, b, c )').a[1]))

# iter()

equal(['123', '456'], map(str, d.match('a123a456xyz', '( a, b, c )').a))
equal(['123', '456'], map(str, d.match('a123a456xyz', '( a, b, c )')['a']))
equal(['123', '456', '789'], map(str, d.match('a123a456a789xyz', '( a, b, c )').a))
equal(['456', '789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['c a']))
equal(['456', '789'], map(str, d.match('a123a456a789xyz', '( a, b, c )').c.a))
equal(['789'], map(str, d.match('a123a456a789xyz', '( a, b, c )').c['b a']))

try:
  ok(False, d.match('a123a456xyz', '( a, b, c )').bogus)

except AttributeError:
  ok(True)

try:
  ok(False, d.match('a123a456xyz', '( a, b, c )')['bogus'])

except KeyError:
  ok(True)

try:
  ok(False, d.match('a123a456xyz', '( bogus )').a)

except AttributeError:
  ok(True)

try:
  ok(False, d.match('a123a456xyz', '( bogus )')['a'])

except KeyError:
  ok(True)

try:
  ok(False, d.match('a123a456xyz').a)

except AttributeError:
  ok(True)

try:
  ok(False, d.match('a123a456xyz')['a'])

except KeyError:
  ok(True)

equal(['456'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['c > a']))
equal(['789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['c > b a']))

equal(['456'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['c>a']))

equal(['a789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['a + b']))
equal(['789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['a + b a']))

equal(['a789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['a+b']))

equal(['a123'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['b:first-child']))
equal(['456'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['c > a:first-child']))

try:
  ok(False, d.match('a123a456a789xyz', '( a, b, c )')['a + b:first-child'])

except KeyError:
  ok(True)

equal(['a123', '123', '456', '789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')[':first-child']))
equal(['456'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['c > :first-child']))

try:
  ok(False, d.match('a123a456a789xyz', '( a, b, c )')['a + :first-child'])

except KeyError:
  ok(True)

e = ('b', [3, [('a', [4, []])]])

equal((4,
  '(?:a\d\d\d)?(a(\d\d\d)(a(\d\d\d)))',
  [('c', [1, [('a', [2, [], e]), e]])],
  [[1, [('a', [2, [], e]), ('b', [3, [('a', [4, []])]])]]]), d.compile(0, ('c', (('b',), ('a',)))))

equal('a456a789', str(d.match('a123a456a789xyz', 'c ( b, a )')))
