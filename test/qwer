#!/usr/bin/env python

from qwer import *
from testify import *

a = qwer('\d\d\d')
b = qwer('a', rule('a'))
c = qwer('a', rule('a'), rule('b'))
d = qwer('(?:', rule('b'), ')?', rule('c'))

equal(('(?:a\d\d\d)?a\d\d\da\d\d\d', []), d.compile())

x = [(0, [])]
equal(('(?:a(\d\d\d))?a(\d\d\d)a(\d\d\d)', [('a', (1, [])), ('a', (2, [])), ('a', (3, []))]), d.compile(x, ('a',)))
equal([(0, []), (1, []), (2, []), (3, [])], x)

x = [(0, [])]
equal(('(?:a\d\d\d)?a(\d\d\d)a(\d\d\d)', [('a', (1, [])), ('a', (2, []))]), d.compile(x, ('c', 'a')))
equal([(0, []), (1, []), (2, [])], x)

x = [(0, [])]
equal(('(?:a\d\d\d)?a\d\d\da(\d\d\d)', [('a', (1, []))]), d.compile(x, ('c', 'b', 'a')))
equal([(0, []), (1, [])], x)

x = [(0, [])]
equal(('(?:a\d\d\d)?a\d\d\da\d\d\d', []), d.compile(x, ('bogus',)))
equal([(0, [])], x)

equal(123, int(a.match('123xyz')))
equal(3, len(a.match('123xyz')))
equal('123', str(a.match('123xyz')))

try:
  ok(False, a.match('xyz123xyz'))

except ValueError:
  ok(True)

equal(123, int(a.search('xyz123xyz')))
equal(3, len(a.search('xyz123xyz')))
equal('123', str(a.search('xyz123xyz')))

try:
  ok(False, a.search('xyz'))

except ValueError:
  ok(True)

# int()

equal(123, int(d.match('a123a456xyz', 'a')))
equal(123, int(d.match('a123a456a789xyz', 'a')))
equal(456, int(d.match('a123a456a789xyz', 'c a')))
equal(789, int(d.match('a123a456a789xyz', 'c b a')))

try:
  ok(False, int(d.match('a123a456xyz', 'bogus')))

except IndexError:
  ok(True)

# str()

equal('123', str(d.match('a123a456xyz', 'a')))
equal('123', str(d.match('a123a456a789xyz', 'a')))
equal('456', str(d.match('a123a456a789xyz', 'c a')))
equal('789', str(d.match('a123a456a789xyz', 'c b a')))

try:
  ok(False, str(d.match('a123a456xyz', 'bogus')))

except IndexError:
  ok(True)

equal('456', str(d.match('a123a456xyz', 'a')[1]))

try:
  ok(False, d.match('a123a456xyz', 'a')[2])

except IndexError:
  ok(True)

try:
  ok(False, d.match('a123a456xyz', 'bogus')[0])

except IndexError:
  ok(True)

# iter()

equal(['123', '456'], map(str, d.match('a123a456xyz', 'a')))
equal(['123', '456', '789'], map(str, d.match('a123a456a789xyz', 'a')))
equal(['456', '789'], map(str, d.match('a123a456a789xyz', 'c a')))
equal(['789'], map(str, d.match('a123a456a789xyz', 'c b a')))

equal([], map(str, d.match('a123a456xyz', 'bogus')))

# int()

equal(123, int(d.match('a123a456xyz').a))
equal(123, int(d.match('a123a456xyz')['a']))
equal(123, int(d.match('a123a456a789xyz').a))
equal(456, int(d.match('a123a456a789xyz')['c a']))
equal(456, int(d.match('a123a456a789xyz').c.a))
equal(789, int(d.match('a123a456a789xyz').c['b a']))

# str()

equal('123', str(d.match('a123a456xyz').a))
equal('123', str(d.match('a123a456xyz')['a']))
equal('123', str(d.match('a123a456a789xyz').a))
equal('456', str(d.match('a123a456a789xyz')['c a']))
equal('456', str(d.match('a123a456a789xyz').c.a))
equal('789', str(d.match('a123a456a789xyz').c['b a']))

equal('456', str(d.match('a123a456xyz').a[1]))

# iter()

equal(['123', '456'], map(str, d.match('a123a456xyz').a))
equal(['123', '456'], map(str, d.match('a123a456xyz')['a']))
equal(['123', '456', '789'], map(str, d.match('a123a456a789xyz').a))
equal(['456', '789'], map(str, d.match('a123a456a789xyz')['c a']))
equal(['456', '789'], map(str, d.match('a123a456a789xyz').c.a))
equal(['789'], map(str, d.match('a123a456a789xyz').c['b a']))

try:
  ok(False, d.match('a123a456xyz').bogus)

except AttributeError:
  ok(True)

try:
  ok(False, d.match('a123a456xyz')['bogus'])

except KeyError:
  ok(True)
