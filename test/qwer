#!/usr/bin/env python

from qwer import *
from testify import *

a = qwer('...')
b = rule('a')
c = qwer('(?:a', rule('a'), ')?b', rule('b'))

# Unbound

equal(('(?:a(...))?b(...)', [a, a]), c.zxcv(('a',)))
equal(('(?:a...)?b(...)', [a]), c.zxcv(('b', 'a')))
equal(('(?:a...)?b...', []), c.zxcv(('bogus',)))

equal('(?:a...)?b...', str(c))

# Bound

# int()

equal(123, int(c('b123xyz').a))
equal(123, int(c('b123xyz')['a']))
equal(123, int(c('a123b456xyz').a))
equal(456, int(c('a123b456xyz')['b a']))
equal(456, int(c('a123b456xyz').b.a))

try:
  ok(False, int(c('b123xyz').bogus))

except AttributeError:
  ok(True)

try:
  ok(False, int(c('xyz').a))

except ValueError:
  ok(True)

# iter()

equal(['abc'], map(str, c('babcxyz').a))
equal(['abc'], map(str, c('babcxyz')['a']))
equal(['abc', 'def'], map(str, c('aabcbdefxyz').a))
equal(['def'], map(str, c('aabcbdefxyz')['b a']))
equal(['def'], map(str, c('aabcbdefxyz').b.a))

try:
  ok(False, iter(c('babcxyz').bogus))

except AttributeError:
  ok(True)

try:
  ok(False, iter(c('xyz').a))

except ValueError:
  ok(True)

# str()

equal('abc', str(c('babcxyz').a))
equal('abc', str(c('babcxyz')['a']))
equal('abcdef', str(c('aabcbdefxyz').a))
equal('def', str(c('aabcbdefxyz')['b a']))
equal('def', str(c('aabcbdefxyz').b.a))

try:
  ok(False, str(c('babcxyz').bogus))

except AttributeError:
  ok(True)

try:
  ok(False, str(c('xyz').a))

except ValueError:
  ok(True)

# int()

equal(123, int(a('123')))
equal(123, int(c('123')))

# len()

equal(4, len(c('babcxyz')))

try:
  ok(False, len(c('xyz')))

except ValueError:
  ok(True)

# str()

equal('abc', str(a('abc')))
equal('abc', str(c('abc')))
