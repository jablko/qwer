#!/usr/bin/env python

import qwer
from testify import *

a = qwer.qwer('\d\d\d')
b = qwer.qwer('a', qwer.rule('a'))
c = qwer.qwer('a', qwer.rule('a'), qwer.rule('b'))
d = qwer.qwer('(?:', qwer.rule('b'), ')?', qwer.rule('c'))

equal((0,
  '(?:a\d\d\d)?a\d\d\da\d\d\d',
  [],
  []), d.zxcv(0, '', ''))

equal(123, int(a.match('123xyz')))
equal(3, len(a.match('123xyz')))
equal('123', str(a.match('123xyz')))

try:
  ok(False, a.match('xyz123xyz'))

except ValueError:
  ok(True)

equal(123, int(a.search('xyz123xyz')))
equal(3, len(a.search('xyz123xyz')))
equal('123', str(a.search('xyz123xyz')))

try:
  ok(False, a.search('xyz'))

except ValueError:
  ok(True)

equiv((3,
  '(?:a(\d\d\d))?a(\d\d\d)a(\d\d\d)',
  [('a', qwer.asdf(1)), ('a', qwer.asdf(2)), ('a', qwer.asdf(3))],
  [qwer.asdf(1), qwer.asdf(2), qwer.asdf(3)]), d.zxcv(0, '', '', ('a', ())))

equiv((2,
  '(?:a\d\d\d)?a(\d\d\d)a(\d\d\d)',
  [('a', qwer.asdf(1)), ('a', qwer.asdf(2))],
  [qwer.asdf(1), qwer.asdf(2)]), d.zxcv(0, '', '', ('c', 'a', ())))

equiv((1,
  '(?:a\d\d\d)?a\d\d\da(\d\d\d)',
  [('a', qwer.asdf(1))],
  [qwer.asdf(1)]), d.zxcv(0, '', '', ('c', 'b', 'a', ())))

equal((0,
  '(?:a\d\d\d)?a\d\d\da\d\d\d',
  [],
  []), d.zxcv(0, '', '', ('bogus', ())))

# int()

equal(123, int(d.match('a123a456xyz', 'a')))
equal(123, int(d.match('a123a456a789xyz', 'a')))
equal(456, int(d.match('a123a456a789xyz', 'c a')))
equal(789, int(d.match('a123a456a789xyz', 'c b a')))

try:
  ok(False, int(d.match('a123a456xyz', 'bogus')))

except ValueError:
  ok(True)

# str()

equal('123', str(d.match('a123a456xyz', 'a')))
equal('123', str(d.match('a123a456a789xyz', 'a')))
equal('456', str(d.match('a123a456a789xyz', 'c a')))
equal('789', str(d.match('a123a456a789xyz', 'c b a')))

equal('', str(d.match('a123a456xyz', 'bogus')))

equal('456', str(d.match('a123a456xyz', 'a')[1]))

try:
  ok(False, d.match('a123a456xyz', 'a')[2])

except IndexError:
  ok(True)

try:
  ok(False, d.match('a123a456xyz', 'bogus')[0])

except IndexError:
  ok(True)

# iter()

equal(['123', '456'], map(str, d.match('a123a456xyz', 'a')))
equal(['123', '456', '789'], map(str, d.match('a123a456a789xyz', 'a')))
equal(['456', '789'], map(str, d.match('a123a456a789xyz', 'c a')))
equal(['789'], map(str, d.match('a123a456a789xyz', 'c b a')))

equal([], map(str, d.match('a123a456xyz', 'bogus')))

e = ('b', qwer.asdf(5, ('a', qwer.asdf(6))))

equiv((6,
  '(?:(a(\d\d\d)))?(a(\d\d\d)(a(\d\d\d)))',
  [('b', qwer.asdf(1, ('a', qwer.asdf(2)))), ('c', qwer.asdf(3, ('a', qwer.asdf(4, sibling=e)), e))],
  [qwer.asdf(1, ('a', qwer.asdf(2))), qwer.asdf(2), qwer.asdf(3, ('a', qwer.asdf(4, sibling=e)), e), qwer.asdf(4, sibling=e), qwer.asdf(5, ('a', qwer.asdf(6))), qwer.asdf(6)]), d.zxcv(0, '', '', ('a', ()), ('b', ()), ('c', ())))

equal(['a123', '123', 'a456a789', '456', 'a789', '789'], map(str, d.match('a123a456a789', 'a', 'b', 'c')))
equal(['a123', '123', 'a456a789', '456', 'a789', '789'], map(str, d.match('a123a456a789', 'a, b, c')))

equiv((6,
  '(?:(a(\d\d\d)))?(a(\d\d\d)(a(\d\d\d)))',
  [('b', qwer.asdf(1, ('a', qwer.asdf(2)))), ('c', qwer.asdf(3, ('a', qwer.asdf(4, sibling=e)), e))],
  []), d.zxcv(0, '', '', (('a',),), (('b',),), (('c',),)))

# int()

equal(123, int(d.match('a123a456xyz', '( a, b, c )').a))
equal(123, int(d.match('a123a456xyz', '( a, b, c )')['a']))
equal(123, int(d.match('a123a456a789xyz', '( a, b, c )').a))
equal(456, int(d.match('a123a456a789xyz', '( a, b, c )')['c a']))
equal(456, int(d.match('a123a456a789xyz', '( a, b, c )').c.a))
equal(789, int(d.match('a123a456a789xyz', '( a, b, c )').c['b a']))

# str()

equal('123', str(d.match('a123a456xyz', '( a, b, c )').a))
equal('123', str(d.match('a123a456xyz', '( a, b, c )')['a']))
equal('123', str(d.match('a123a456a789xyz', '( a, b, c )').a))
equal('456', str(d.match('a123a456a789xyz', '( a, b, c )')['c a']))
equal('456', str(d.match('a123a456a789xyz', '( a, b, c )').c.a))
equal('789', str(d.match('a123a456a789xyz', '( a, b, c )').c['b a']))

equal('456', str(d.match('a123a456xyz', '( a, b, c )').a[1]))

# iter()

equal(['123', '456'], map(str, d.match('a123a456xyz', '( a, b, c )').a))
equal(['123', '456'], map(str, d.match('a123a456xyz', '( a, b, c )')['a']))
equal(['123', '456', '789'], map(str, d.match('a123a456a789xyz', '( a, b, c )').a))
equal(['456', '789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['c a']))
equal(['456', '789'], map(str, d.match('a123a456a789xyz', '( a, b, c )').c.a))
equal(['789'], map(str, d.match('a123a456a789xyz', '( a, b, c )').c['b a']))

try:
  ok(False, d.match('a123a456xyz', '( a, b, c )').bogus)

except AttributeError:
  ok(True)

try:
  ok(False, d.match('a123a456xyz', '( a, b, c )')['bogus'])

except KeyError:
  ok(True)

try:
  ok(False, d.match('a123a456xyz', '( bogus )').a)

except AttributeError:
  ok(True)

try:
  ok(False, d.match('a123a456xyz', '( bogus )')['a'])

except KeyError:
  ok(True)

try:
  ok(False, d.match('a123a456xyz').a)

except AttributeError:
  ok(True)

try:
  ok(False, d.match('a123a456xyz')['a'])

except KeyError:
  ok(True)

equal(['a123', '123', 'a456a789', '456', 'a789', '789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['a, b, c']))

equal(['456'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['c > a']))
equal(['789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['c > b a']))

equal(['456'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['c>a']))

equal(['a789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['a + b']))
equal(['789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['a + b a']))

equal(['a789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['a+b']))

equal(['a123'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['b:first-child']))
equal(['456'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['c > a:first-child']))

try:
  ok(False, d.match('a123a456a789xyz', '( a, b, c )')['a + b:first-child'])

except KeyError:
  ok(True)

equal(['a123', '123', '456', '789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')[':first-child']))
equal(['456'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['c > :first-child']))

try:
  ok(False, d.match('a123a456a789xyz', '( a, b, c )')['a + :first-child'])

except KeyError:
  ok(True)

equal(['a123', '123', 'a456a789', '456', 'a789', '789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['*']))
equal(['456', 'a789', '789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['c *']))
equal(['789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['c * a']))
equal(['456', 'a789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['c > *']))
equal(['789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['c > * a']))
equal(['a789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['a + *']))
equal(['789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['a + * a']))
equal(['a123', '123', '456', '789'], map(str, d.match('a123a456a789xyz', '( a, b, c )')['*:first-child']))

e = ('b', qwer.asdf(3, ('a', qwer.asdf(4))))

equiv((4,
  '(?:a\d\d\d)?(a(\d\d\d)(a(\d\d\d)))',
  [('c', qwer.asdf(1, ('a', qwer.asdf(2, sibling=e)), e))],
  [qwer.asdf(1, ('a', qwer.asdf(2, sibling=e)), ('b', qwer.asdf(3, ('a', qwer.asdf(4)))))]), d.zxcv(0, '', '', ('c', ((('b',),), (('a',),)))))

equal('a456a789', str(d.match('a123a456a789xyz', 'c ( b, a )')))
